package MiniProject1;
import java.util.*;

class Patient{
	int  id,age;
	long phno,gphno,aadhar;
	String name,gname,gender,city,adress,gadress,date;
	boolean status;
	public boolean getStatus() {
		return status;
	}
	public void setStatus(boolean status) {
		this.status = status;
	}
	public String getGname() {
		return gname;
	}
	public void setGname(String gname) {
		this.gname = gname;
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public long getPhno() {
		return phno;
	}
	public void setPhno(long phno) {
		this.phno = phno;
	}
	public long getGphno() {
		return gphno;
	}
	public void setGphno(long gphno) {
		this.gphno = gphno;
	}
	public long getAadhar() {
		return aadhar;
	}
	public void setAadhar(long aadhar) {
		this.aadhar = aadhar;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getGender() {
		return gender;
	}
	public void setGender(String gender) {
		this.gender = gender;
	}
	public String getCity() {
		return city;
	}
	public void setCity(String city) {
		this.city = city;
	}
	public String getAdress() {
		return adress;
	}
	public void setAdress(String adress) {
		this.adress = adress;
	}
	public String getGadress() {
		return gadress;
	}
	public void setGadress(String gadress) {
		this.gadress = gadress;
	}
	public String getDate() {
		return date;
	}
	public void setDate(String date) {
		this.date = date;
	}
}

class Arogya {
	Scanner s = new Scanner(System.in);
	ArrayList<Patient> al = new ArrayList<Patient>();

	public void add() {
		Patient p1 = new Patient();
		System.out.println("Enter the ID:");
		p1.setId(s.nextInt());

		System.out.println("Enter the name:");
		p1.setName(s.next());

		 int age;
		 while (true) {
		System.out.println("Enter the age:");
		 age = s.nextInt();
	        if (age >= 1 && age <= 99) {
	            break;
	        } else {
	            System.out.println("Invalid, Age should be in 1 or 2 digits only.");
	        }
		 }
		p1.setAge(age);

		System.out.println("Enter the gender:");
		p1.setGender(s.next());

		long aadhar;
		while(true) {
		System.out.println("Enter the aadhar:");
		 aadhar = s.nextLong();
	        if (String.valueOf(aadhar).length() == 12) {
	            break;
	        } else {
	            System.out.println("Invalid, Aadhar number should contain exactly 12 digits.");
	        }
		}
	            p1.setAadhar(aadhar);

	    long phno;
	    while(true) {
	   System.out.println("Enter the phno:");
	   phno=s.nextLong();
	   if (String.valueOf(phno).length() == 10) {
           break;
       } else {
           System.out.println("Invalid,mobile number should contain exactly 10 digits.");
       }
       }
		p1.setPhno(phno);

		System.out.println("Enter the city:");
		p1.setCity(s.next());

		System.out.println("Enter the address:");
		s.nextLine();
		p1.setAdress(s.nextLine());

		System.out.println("Enter the Date:");
		p1.setDate(s.next());

		System.out.println("Enter the guardian name:");
		p1.setGname(s.next());

		System.out.println("Enter the guardian address:");
		s.nextLine();
		p1.setGadress(s.nextLine());

		System.out.println("Enter the guardian phno:");
		p1.setGphno(s.nextLong());
		
		System.out.println("Enter the Patient status:");
		p1.setStatus(s.nextBoolean());

		al.add(p1);
	 }
		 
	public void display() {
		for (Patient x : al) {
			System.out.println("ID: " + x.getId());
			System.out.println("Name: " + x.getName());
			System.out.println("Age: " + x.getAge());
			System.out.println("Gender: " + x.getGender());
			System.out.println("Aadhar : " + x.getAadhar());
			System.out.println("phno: " + x.getPhno());
			System.out.println("City: " + x.getCity());
			System.out.println("Address: " + x.getAdress());
			System.out.println("Date : " + x.getDate());
			System.out.println("Guardian Name: " + x.getGname());
			System.out.println("Guardian Address: " + x.getGadress());
			System.out.println("Gphno: " + x.getGphno());
			if(x.getStatus()==true) {
			System.out.println("patient status is recovered");
			}
			else {
				System.out.println("patient status is not recovered");
			
			}
			System.out.println("---------------------------------");
		}
	}
	public void displayById(int id) {
		for(Patient x:al) {
			if (x.getId()==id) {
				System.out.println("ID: " + x.getId());
				System.out.println("Name: " + x.getName());
				System.out.println("Age: " + x.getAge());
				System.out.println("Gender: " + x.getGender());
				System.out.println("Aadhar : " + x.getAadhar());
				System.out.println("phno: " + x.getPhno());
				System.out.println("City: " + x.getCity());
				System.out.println("Address: " + x.getAdress());
				System.out.println("Date : " + x.getDate());
				System.out.println("Guardian Name: " + x.getGname());
				System.out.println("Guardian Address: " + x.getGadress());
				System.out.println("Gphno: " + x.getGphno());
				System.out.println("---------------------------------");
			}	
			}
		}
	public void displayByCity(String city){
		for(Patient x:al) {
			  if (x.getCity().equalsIgnoreCase(city)) {
				System.out.println("ID: " + x.getId());
				System.out.println("Name: " + x.getName());
				System.out.println("Age: " + x.getAge());
				System.out.println("Gender: " + x.getGender());
				System.out.println("Aadhar : " + x.getAadhar());
				System.out.println("phno: " + x.getPhno());
				System.out.println("City: " + x.getCity());
				System.out.println("Address: " + x.getAdress());
				System.out.println("Date : " + x.getDate());
				System.out.println("Guardian Name: " + x.getGname());
				System.out.println("Guardian Address: " + x.getGadress());
				System.out.println("Gphno: " + x.getGphno());
				System.out.println("---------------------------------");
	}
	}
}
 public void displayByAgeGroup(int startAge,int endAge)	{
	 for(Patient x:al) {
		 if (x.getAge() >= startAge && x.getAge() <= endAge) {
			System.out.println("ID: " + x.getId());
			System.out.println("Name: " + x.getName());
			System.out.println("Age: " + x.getAge());
			System.out.println("Gender: " + x.getGender());
			System.out.println("Aadhar : " + x.getAadhar());
			System.out.println("phno: " + x.getPhno());
			System.out.println("City: " + x.getCity());
			System.out.println("Address: " + x.getAdress());
			System.out.println("Date : " + x.getDate());
			System.out.println("Guardian Name: " + x.getGname());
			System.out.println("Guardian Address: " + x.getGadress());
			System.out.println("Gphno: " + x.getGphno());
			System.out.println("---------------------------------");
}
}
 }
public void markRecovered(int id1) {
	
	for(Patient x:al) {
	if(id1==x.getId()) {
	System.out.println("enter patient status(true/false)");
	x.setStatus(s.nextBoolean());
			
  }
}
 }
 public void delete(int id) {
	 
	 for(Patient x:al) {
	 if (x.getId() == id) {
        
         al.remove(x);
 }
}
}
 
}
public class Hospital {
	public static void main(String[] a) {
		Arogya obj = new Arogya();
		Scanner s = new Scanner(System.in);
		int option;

		do {
			System.out.println("Press 1 for adding new member");
		    System.out.println("Press 2 to view list of all available members");
		    System.out.println("Press 3 to search member by ID");
		    System.out.println("Press 4 to search member from a particular city");
		    System.out.println("Press 5 to search member from a particular age group");
		    System.out.println("Press 6 to mark recovery of a member");
		    System.out.println("Press 7 to delete data of a member");
		    System.out.println("Press 0 to exit");
			 option=s.nextInt(); 

			switch (option) {
			
				case 1:
					obj.add();
					break;
				case 2:
					obj.display();
					break;
				
				  case 3:
					  System.out.print("Enter patient ID : ");
					  int id=s.nextInt();
	                    obj.displayById(id);
	                    break;
	                case 4:
	                	System.out.println("enter the patient city:");
	                	String cty=s.next();
	                    obj.displayByCity( cty);
	                    break;
	                case 5:
	                	System.out.println("enter the StartAge of patient:");
	                	int  age1=s.nextInt();
	                	System.out.println("enter the endAge of patient:");
	                	int  age2=s.nextInt();
	                    obj.displayByAgeGroup(age1,age2);
	                    break;
	                case 6:
	                	 System.out.print("Enter patient ID : ");
	                	 int id1=s.nextInt();
	                	 
	                    obj.markRecovered(id1);
	                    break;
	                case 7:
	                    System.out.print("Enter patient ID to delete: ");
	                    int del = s.nextInt();
	                    obj.delete(del);
	                    break;	
			
			}
		} while (option != 0);
	}
}